apiVersion: v1
kind: Namespace
metadata:
  name: nanopore-tracking
  labels:
    app: nanopore-tracking
    environment: production
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: microservices-config
  namespace: nanopore-tracking
data:
  # Event Bus Configuration
  EVENT_BUS_MAX_LISTENERS: "100"
  EVENT_BUS_RETRY_DELAY: "1000"
  EVENT_BUS_MAX_RETRIES: "3"
  EVENT_BUS_DEAD_LETTER_THRESHOLD: "100"
  
  # Saga Configuration
  SAGA_STEP_TIMEOUT: "30000"
  SAGA_MAX_ACTIVE_SAGAS: "100"
  SAGA_CLEANUP_INTERVAL: "300000"
  
  # Service Discovery
  SERVICE_DISCOVERY_ENABLED: "true"
  SERVICE_REGISTRY_URL: "http://service-registry:8080"
  
  # Monitoring
  METRICS_ENABLED: "true"
  METRICS_PORT: "9090"
  HEALTH_CHECK_INTERVAL: "30000"
  
  # Database Configuration
  DB_POOL_MIN: "5"
  DB_POOL_MAX: "20"
  DB_CONNECTION_TIMEOUT: "30000"
  DB_IDLE_TIMEOUT: "600000"
---
apiVersion: v1
kind: Secret
metadata:
  name: microservices-secrets
  namespace: nanopore-tracking
type: Opaque
data:
  # Database URLs (base64 encoded)
  SAMPLES_DATABASE_URL: cG9zdGdyZXNxbDovL3VzZXI6cGFzc0BzYW1wbGVzLWRiOjU0MzIvc2FtcGxlc19kYg==
  AI_DATABASE_URL: cG9zdGdyZXNxbDovL3VzZXI6cGFzc0BhaS1kYjo1NDMyL2FpX2Ri
  AUDIT_DATABASE_URL: cG9zdGdyZXNxbDovL3VzZXI6cGFzc0BhdWRpdC1kYjo1NDMyL2F1ZGl0X2Ri
  BACKUP_DATABASE_URL: cG9zdGdyZXNxbDovL3VzZXI6cGFzc0BiYWNrdXAtZGI6NTQzMi9iYWNrdXBfZGI=
  CONFIG_DATABASE_URL: cG9zdGdyZXNxbDovL3VzZXI6cGFzc0Bjb25maWctZGI6NTQzMi9jb25maWdfZGI=
  
  # Redis Configuration (for future event bus scaling)
  REDIS_URL: cmVkaXM6Ly9yZWRpcy1jbHVzdGVyOjYzNzk=
  
  # JWT Secret
  JWT_SECRET: eW91ci1qd3Qtc2VjcmV0LWhlcmU=
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: sample-service
  namespace: nanopore-tracking
  labels:
    app: sample-service
    service: sample-service
    version: v1
spec:
  replicas: 3
  selector:
    matchLabels:
      app: sample-service
      version: v1
  template:
    metadata:
      labels:
        app: sample-service
        service: sample-service
        version: v1
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "9090"
        prometheus.io/path: "/metrics"
    spec:
      containers:
      - name: sample-service
        image: nanopore-tracking-app:latest
        ports:
        - containerPort: 3001
          name: http
        - containerPort: 9090
          name: metrics
        env:
        - name: NODE_ENV
          value: "production"
        - name: SERVICE_NAME
          value: "sample-service"
        - name: SERVICE_PORT
          value: "3001"
        - name: DATABASE_URL
          valueFrom:
            secretKeyRef:
              name: microservices-secrets
              key: SAMPLES_DATABASE_URL
        envFrom:
        - configMapRef:
            name: microservices-config
        - secretRef:
            name: microservices-secrets
        resources:
          requests:
            cpu: 200m
            memory: 512Mi
          limits:
            cpu: 500m
            memory: 1Gi
        livenessProbe:
          httpGet:
            path: /health
            port: 3001
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /ready
            port: 3001
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 2
        volumeMounts:
        - name: app-logs
          mountPath: /app/logs
      volumes:
      - name: app-logs
        emptyDir: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ai-service
  namespace: nanopore-tracking
  labels:
    app: ai-service
    service: ai-service
    version: v1
spec:
  replicas: 2
  selector:
    matchLabels:
      app: ai-service
      version: v1
  template:
    metadata:
      labels:
        app: ai-service
        service: ai-service
        version: v1
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "9090"
        prometheus.io/path: "/metrics"
    spec:
      containers:
      - name: ai-service
        image: nanopore-tracking-app:latest
        ports:
        - containerPort: 3002
          name: http
        - containerPort: 9090
          name: metrics
        env:
        - name: NODE_ENV
          value: "production"
        - name: SERVICE_NAME
          value: "ai-service"
        - name: SERVICE_PORT
          value: "3002"
        - name: DATABASE_URL
          valueFrom:
            secretKeyRef:
              name: microservices-secrets
              key: AI_DATABASE_URL
        - name: OLLAMA_HOST
          value: "ollama-service:11434"
        envFrom:
        - configMapRef:
            name: microservices-config
        - secretRef:
            name: microservices-secrets
        resources:
          requests:
            cpu: 500m
            memory: 1Gi
          limits:
            cpu: 2000m
            memory: 4Gi
        livenessProbe:
          httpGet:
            path: /health
            port: 3002
          initialDelaySeconds: 60
          periodSeconds: 15
          timeoutSeconds: 10
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /ready
            port: 3002
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 2
        volumeMounts:
        - name: app-logs
          mountPath: /app/logs
        - name: ai-models
          mountPath: /app/models
      volumes:
      - name: app-logs
        emptyDir: {}
      - name: ai-models
        persistentVolumeClaim:
          claimName: ai-models-pvc
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: audit-service
  namespace: nanopore-tracking
  labels:
    app: audit-service
    service: audit-service
    version: v1
spec:
  replicas: 2
  selector:
    matchLabels:
      app: audit-service
      version: v1
  template:
    metadata:
      labels:
        app: audit-service
        service: audit-service
        version: v1
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "9090"
        prometheus.io/path: "/metrics"
    spec:
      containers:
      - name: audit-service
        image: nanopore-tracking-app:latest
        ports:
        - containerPort: 3003
          name: http
        - containerPort: 9090
          name: metrics
        env:
        - name: NODE_ENV
          value: "production"
        - name: SERVICE_NAME
          value: "audit-service"
        - name: SERVICE_PORT
          value: "3003"
        - name: DATABASE_URL
          valueFrom:
            secretKeyRef:
              name: microservices-secrets
              key: AUDIT_DATABASE_URL
        envFrom:
        - configMapRef:
            name: microservices-config
        - secretRef:
            name: microservices-secrets
        resources:
          requests:
            cpu: 100m
            memory: 256Mi
          limits:
            cpu: 300m
            memory: 512Mi
        livenessProbe:
          httpGet:
            path: /health
            port: 3003
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /ready
            port: 3003
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 2
        volumeMounts:
        - name: app-logs
          mountPath: /app/logs
      volumes:
      - name: app-logs
        emptyDir: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: backup-service
  namespace: nanopore-tracking
  labels:
    app: backup-service
    service: backup-service
    version: v1
spec:
  replicas: 1
  selector:
    matchLabels:
      app: backup-service
      version: v1
  template:
    metadata:
      labels:
        app: backup-service
        service: backup-service
        version: v1
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "9090"
        prometheus.io/path: "/metrics"
    spec:
      containers:
      - name: backup-service
        image: nanopore-tracking-app:latest
        ports:
        - containerPort: 3004
          name: http
        - containerPort: 9090
          name: metrics
        env:
        - name: NODE_ENV
          value: "production"
        - name: SERVICE_NAME
          value: "backup-service"
        - name: SERVICE_PORT
          value: "3004"
        - name: DATABASE_URL
          valueFrom:
            secretKeyRef:
              name: microservices-secrets
              key: BACKUP_DATABASE_URL
        envFrom:
        - configMapRef:
            name: microservices-config
        - secretRef:
            name: microservices-secrets
        resources:
          requests:
            cpu: 100m
            memory: 256Mi
          limits:
            cpu: 200m
            memory: 512Mi
        livenessProbe:
          httpGet:
            path: /health
            port: 3004
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /ready
            port: 3004
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 2
        volumeMounts:
        - name: app-logs
          mountPath: /app/logs
        - name: backup-storage
          mountPath: /app/backups
      volumes:
      - name: app-logs
        emptyDir: {}
      - name: backup-storage
        persistentVolumeClaim:
          claimName: backup-storage-pvc
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: config-service
  namespace: nanopore-tracking
  labels:
    app: config-service
    service: config-service
    version: v1
spec:
  replicas: 2
  selector:
    matchLabels:
      app: config-service
      version: v1
  template:
    metadata:
      labels:
        app: config-service
        service: config-service
        version: v1
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "9090"
        prometheus.io/path: "/metrics"
    spec:
      containers:
      - name: config-service
        image: nanopore-tracking-app:latest
        ports:
        - containerPort: 3005
          name: http
        - containerPort: 9090
          name: metrics
        env:
        - name: NODE_ENV
          value: "production"
        - name: SERVICE_NAME
          value: "config-service"
        - name: SERVICE_PORT
          value: "3005"
        - name: DATABASE_URL
          valueFrom:
            secretKeyRef:
              name: microservices-secrets
              key: CONFIG_DATABASE_URL
        envFrom:
        - configMapRef:
            name: microservices-config
        - secretRef:
            name: microservices-secrets
        resources:
          requests:
            cpu: 100m
            memory: 256Mi
          limits:
            cpu: 200m
            memory: 512Mi
        livenessProbe:
          httpGet:
            path: /health
            port: 3005
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /ready
            port: 3005
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 2
        volumeMounts:
        - name: app-logs
          mountPath: /app/logs
      volumes:
      - name: app-logs
        emptyDir: {}
---
apiVersion: v1
kind: Service
metadata:
  name: sample-service
  namespace: nanopore-tracking
  labels:
    app: sample-service
    service: sample-service
spec:
  selector:
    app: sample-service
  ports:
  - name: http
    port: 80
    targetPort: 3001
  - name: metrics
    port: 9090
    targetPort: 9090
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  name: ai-service
  namespace: nanopore-tracking
  labels:
    app: ai-service
    service: ai-service
spec:
  selector:
    app: ai-service
  ports:
  - name: http
    port: 80
    targetPort: 3002
  - name: metrics
    port: 9090
    targetPort: 9090
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  name: audit-service
  namespace: nanopore-tracking
  labels:
    app: audit-service
    service: audit-service
spec:
  selector:
    app: audit-service
  ports:
  - name: http
    port: 80
    targetPort: 3003
  - name: metrics
    port: 9090
    targetPort: 9090
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  name: backup-service
  namespace: nanopore-tracking
  labels:
    app: backup-service
    service: backup-service
spec:
  selector:
    app: backup-service
  ports:
  - name: http
    port: 80
    targetPort: 3004
  - name: metrics
    port: 9090
    targetPort: 9090
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  name: config-service
  namespace: nanopore-tracking
  labels:
    app: config-service
    service: config-service
spec:
  selector:
    app: config-service
  ports:
  - name: http
    port: 80
    targetPort: 3005
  - name: metrics
    port: 9090
    targetPort: 9090
  type: ClusterIP
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: ai-models-pvc
  namespace: nanopore-tracking
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi
  storageClassName: fast-ssd
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: backup-storage-pvc
  namespace: nanopore-tracking
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 100Gi
  storageClassName: standard 