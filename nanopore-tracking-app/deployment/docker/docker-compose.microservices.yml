version: '3.8'

services:
  # API Gateway
  api-gateway:
    build:
      context: ../..
      dockerfile: deployment/docker/Dockerfile.gateway
    ports:
      - "3001:3001"
    environment:
      - NODE_ENV=development
      - SAMPLE_SERVICE_URL=http://sample-management:3002
      - AI_SERVICE_URL=http://ai-processing:3003
      - AUTH_SERVICE_URL=http://authentication:3004
      - FILE_SERVICE_URL=http://file-storage:3004
      - AUDIT_SERVICE_URL=http://audit:3006
    depends_on:
      - sample-management
      - ai-processing
      - authentication
      - file-storage
      - audit
    networks:
      - nanopore-network
    restart: unless-stopped

  # Sample Management Service
  sample-management:
    build:
      context: ../..
      dockerfile: deployment/docker/Dockerfile.sample-service
    ports:
      - "3002:3002"
    environment:
      - NODE_ENV=development
      - PORT=3002
      - DATABASE_URL=postgresql://postgres:password@sample-db:5432/sample_db
      - SERVICE_NAME=sample-management
      - SERVICE_VERSION=1.0.0
    depends_on:
      - sample-db
    networks:
      - nanopore-network
    restart: unless-stopped
    volumes:
      - sample-data:/app/data

  # AI Processing Service
  ai-processing:
    build:
      context: ../..
      dockerfile: deployment/docker/Dockerfile.ai-service
    ports:
      - "3003:3003"
    environment:
      - NODE_ENV=development
      - PORT=3003
      - OLLAMA_URL=http://ollama:11434
      - VECTOR_DB_URL=http://vector-db:6333
      - SERVICE_NAME=ai-processing
      - SERVICE_VERSION=1.0.0
    depends_on:
      - ollama
      - vector-db
    networks:
      - nanopore-network
    restart: unless-stopped
    volumes:
      - ai-data:/app/data

  # Authentication Service
  authentication:
    build:
      context: ../..
      dockerfile: services/authentication/Dockerfile
    ports:
      - "3004:3004"
    environment:
      - NODE_ENV=development
      - PORT=3004
      - DATABASE_URL=postgresql://postgres:password@auth-db:5432/auth_db
      - JWT_SECRET=your-jwt-secret-key
      - SERVICE_NAME=authentication
      - SERVICE_VERSION=1.0.0
      - CORS_ORIGIN=http://localhost:3001
    depends_on:
      - auth-db
    networks:
      - nanopore-network
    restart: unless-stopped

  # File Storage Service
  file-storage:
    build:
      context: ../..
      dockerfile: services/file-storage/Dockerfile
    ports:
      - "3005:3004"
    environment:
      - NODE_ENV=development
      - FILE_STORAGE_PORT=3004
      - FILE_STORAGE_DB_HOST=file-storage-db
      - FILE_STORAGE_DB_PORT=5432
      - FILE_STORAGE_DB_NAME=file_storage
      - FILE_STORAGE_DB_USER=postgres
      - FILE_STORAGE_DB_PASSWORD=password
      - FILE_STORAGE_PATH=/app/storage/files
      - FILE_STORAGE_MAX_SIZE=104857600
      - FILE_STORAGE_ALLOWED_TYPES=pdf,jpg,jpeg,png,gif,txt,csv,xlsx,docx
      - FILE_STORAGE_CORS_ORIGIN=http://localhost:3001
      - SERVICE_NAME=file-storage
      - SERVICE_VERSION=1.0.0
    depends_on:
      - file-storage-db
    networks:
      - nanopore-network
    restart: unless-stopped
    volumes:
      - file-storage-data:/app/storage

  # Audit Service
  audit:
    build:
      context: ../..
      dockerfile: services/audit/Dockerfile
    ports:
      - "3006:3006"
    environment:
      - NODE_ENV=development
      - AUDIT_SERVICE_PORT=3006
      - AUDIT_DB_HOST=audit-db
      - AUDIT_DB_PORT=5432
      - AUDIT_DB_NAME=audit_db
      - AUDIT_DB_USER=postgres
      - AUDIT_DB_PASSWORD=password
      - AUDIT_RETENTION_DAYS=90
      - AUDIT_MAX_EVENTS_PER_REQUEST=1000
      - AUDIT_ENABLE_REALTIME_ALERTS=true
      - AUDIT_ENABLE_SCHEDULED_REPORTS=true
      - AUDIT_ENABLE_DATA_RETENTION=true
      - CORS_ORIGIN=http://localhost:3001
      - LOG_LEVEL=info
      - SERVICE_NAME=audit
      - SERVICE_VERSION=1.0.0
    depends_on:
      - audit-db
    networks:
      - nanopore-network
    restart: unless-stopped
    volumes:
      - audit-logs:/app/logs

  # Sample Management Database
  sample-db:
    image: postgres:15-alpine
    environment:
      - POSTGRES_DB=sample_db
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
    ports:
      - "5432:5432"
    volumes:
      - sample-db-data:/var/lib/postgresql/data
      - ../../database/migrations:/docker-entrypoint-initdb.d
    networks:
      - nanopore-network
    restart: unless-stopped

  # Authentication Database
  auth-db:
    image: postgres:15-alpine
    environment:
      - POSTGRES_DB=auth_db
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
    ports:
      - "5433:5432"
    volumes:
      - auth-db-data:/var/lib/postgresql/data
    networks:
      - nanopore-network
    restart: unless-stopped

  # File Storage Database
  file-storage-db:
    image: postgres:15-alpine
    environment:
      - POSTGRES_DB=file_storage
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
    ports:
      - "5435:5432"
    volumes:
      - file-storage-db-data:/var/lib/postgresql/data
      - ../../services/file-storage/src/database/schema.sql:/docker-entrypoint-initdb.d/01-schema.sql
    networks:
      - nanopore-network
    restart: unless-stopped

  # Audit Database
  audit-db:
    image: postgres:15-alpine
    environment:
      - POSTGRES_DB=audit_db
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
    ports:
      - "5434:5432"
    volumes:
      - audit-db-data:/var/lib/postgresql/data
      - ../../services/audit/src/database/schema.sql:/docker-entrypoint-initdb.d/01-schema.sql
    networks:
      - nanopore-network
    restart: unless-stopped

  # Ollama LLM Service
  ollama:
    image: ollama/ollama:latest
    ports:
      - "11434:11434"
    volumes:
      - ollama-data:/root/.ollama
    networks:
      - nanopore-network
    restart: unless-stopped

  # Vector Database (Qdrant)
  vector-db:
    image: qdrant/qdrant:latest
    ports:
      - "6333:6333"
      - "6334:6334"
    volumes:
      - vector-db-data:/qdrant/storage
    networks:
      - nanopore-network
    restart: unless-stopped

  # Redis for caching and session storage
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - nanopore-network
    restart: unless-stopped

  # Prometheus for monitoring
  prometheus:
    image: prom/prometheus:latest
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus-data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    networks:
      - nanopore-network
    restart: unless-stopped

  # Grafana for visualization
  grafana:
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana-data:/var/lib/grafana
    networks:
      - nanopore-network
    restart: unless-stopped

volumes:
  sample-data:
  ai-data:
  file-storage-data:
  file-storage-db-data:
  sample-db-data:
  auth-db-data:
  audit-db-data:
  audit-logs:
  ollama-data:
  vector-db-data:
  redis-data:
  prometheus-data:
  grafana-data:

networks:
  nanopore-network:
    driver: bridge